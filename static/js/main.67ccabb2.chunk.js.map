{"version":3,"sources":["helpers/create-action-type.js","redux/swapi/starship/starship.constants.js","assets/img/accenture-logo-light.webp","redux/swapi/index.js","redux/swapi/starship/starship.reducer.js","redux/reducers.js","redux/middlewares/notification.middleware.js","redux/store.js","components/loader/loader.js","pages/routes/routes.js","App.js","helpers/init-noty.js","reportWebVitals.js","index.js"],"names":["createActionType","namespace","types","reduce","a","b","FETCH_STARSHIPS","GET_STARSHIP","starship","handleActions","REQUEST","state","update","isLoading","$set","SUCCESS","data","payload","isLoaded","resource","FAILED","rootConfig","key","storage","blacklist","swapiConfig","rootReducer","combineReducers","swapi","persistReducer","swapiReducer","next","action","notification","Noty","show","middlewares","thunk","notificationMiddleware","enhancedMiddlewares","composeWithDevTools","applyMiddleware","store","createStore","reducers","window","persistor","persistStore","createPersistentStore","override","css","Loader","useState","color","className","src","AccentureLogoLight","alt","loading","size","Home","lazy","routes","fallback","exact","path","component","props","render","to","pathname","App","overrideDefaults","theme","closeWith","timeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67ccabb2.chunk.js","sourcesContent":["const createActionType = function(namespace, types) {\n  return types.reduce(function(a, b) {\n      a[b] = `${namespace}/${b}`;\n      return a;\n   }, {});\n}\n\nexport default createActionType\n","import createActionType from 'helpers/create-action-type'\n\nexport const FETCH_STARSHIPS = createActionType('FETCH_STARSHIPS', [\n  'REQUEST',\n  'SUCCESS',\n  'FAILED',\n])\n\nexport const GET_STARSHIP = createActionType('GET_STARSHIP', [\n  'REQUEST',\n  'SUCCESS',\n  'FAILED',\n])\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  FETCH_STARSHIPS,\n  GET_STARSHIP,\n}\n","export default __webpack_public_path__ + \"static/media/accenture-logo-light.9b8728a0.webp\";","import starship from './starship'\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  starship,\n}\n","import { handleActions } from 'redux-actions'\n\nimport update from 'immutability-helper'\n\nimport types from './starship.constants'\n\nconst initialState = {\n  isLoading: false,\n  isLoaded: false,\n  resource: {},\n  data: {},\n}\n\nexport default handleActions(\n  {\n    [types.FETCH_STARSHIPS.REQUEST]: (state) => {\n      return update(state, {\n        isLoading: {\n          $set: true,\n        },\n      })\n    },\n    [types.FETCH_STARSHIPS.SUCCESS]: (state, { payload: { data } }) => {\n      return update(state, {\n        isLoaded: {\n          $set: true,\n        },\n        isLoading: {\n          $set: false,\n        },\n        resource: {\n          $set: data,\n        },\n      })\n    },\n    [types.FETCH_STARSHIPS.FAILED]: (state) => {\n      return update(state, {\n        isLoading: {\n          $set: false,\n        },\n      })\n    },\n    [types.GET_STARSHIP.REQUEST]: (state) => {\n      return update(state, {\n        isLoading: {\n          $set: true,\n        },\n      })\n    },\n    [types.GET_STARSHIP.SUCCESS]: (state, { payload: { data } }) => {\n      return update(state, {\n        isLoaded: {\n          $set: true,\n        },\n        isLoading: {\n          $set: false,\n        },\n        data: {\n          $set: data,\n        },\n      })\n    },\n    [types.GET_STARSHIP.FAILED]: (state) => {\n      return update(state, {\n        isLoading: {\n          $set: false,\n        },\n      })\n    },\n  },\n\n  initialState,\n)\n","import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\n\nimport storage from 'redux-persist/lib/storage'\n\nimport swapiReducer from './swapi'\n\nconst rootConfig = {\n  key: 'root',\n  storage,\n  blacklist: [],\n}\n\nconst swapiConfig = {\n  key: 'swapi',\n  storage,\n  blacklist: [],\n}\n\nexport const rootReducer = combineReducers({\n  swapi: persistReducer(swapiConfig, combineReducers(swapiReducer)),\n})\n\nexport default persistReducer(rootConfig, rootReducer)\n","import Noty from 'noty'\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n  return (next) => (action) => {\n    if (action.notification) {\n      new Noty(action.notification).show()\n    }\n\n    return next(action)\n  }\n}\n","import { composeWithDevTools } from 'redux-devtools-extension'\nimport { createStore, applyMiddleware } from 'redux'\nimport { persistStore } from 'redux-persist'\n\nimport thunk from 'redux-thunk'\n\nimport reducers from './reducers'\nimport notificationMiddleware from './middlewares/notification.middleware'\n\nconst createPersistentStore = () => {\n  const middlewares = [thunk, notificationMiddleware]\n\n  const enhancedMiddlewares = composeWithDevTools(\n    applyMiddleware(...middlewares),\n  )\n\n  const store = createStore(reducers, {}, enhancedMiddlewares)\n\n  window.store = store\n\n  const persistor = persistStore(store)\n\n  return { persistor, store }\n}\n\nexport const { store, persistor } = createPersistentStore()\n","import { useState } from 'react'\nimport { css } from '@emotion/react'\nimport BounceLoader from 'react-spinners/BounceLoader'\nimport AccentureLogoLight from 'assets/img/accenture-logo-light.webp'\n\nimport './loader.scss'\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`\n\nexport default function Loader() {\n  const [color] = useState('#a200ff')\n  return (\n    <div className=\"loader-container\">\n      <div>\n        <img\n          src={AccentureLogoLight}\n          className=\"accenture\"\n          alt=\"accenture-brand\"\n        />\n        <BounceLoader color={color} loading={true} css={override} size={150} />\n      </div>\n    </div>\n  )\n}\n","import React, { lazy, Suspense } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom'\nimport Loader from 'components/loader/loader'\n\nconst Home = lazy(() => import('pages/home/home-show'))\n\nexport default function routes() {\n  const renderHome = (props) => <Home {...props} />\n\n  return (\n    <Router>\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <Route exact path=\"/home\" component={renderHome} />\n          <Route render={() => <Redirect to={{ pathname: '/home' }} />} />\n        </Switch>\n      </Suspense>\n    </Router>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { persistor, store } from 'redux/store'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { PersistGate } from 'redux-persist/lib/integration/react'\n\nimport Routes from 'pages/routes/routes'\nimport initNoty from 'helpers/init-noty'\nimport 'App.scss'\n\ninitNoty()\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router>\n          <Routes />\n        </Router>\n      </PersistGate>\n    </Provider>\n  )\n}\n","import Noty from 'noty'\n\nimport 'noty/src/noty.scss'\n\nimport './noty.scss'\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function () {\n  Noty.overrideDefaults({\n    theme: 'sunset',\n    closeWith: ['click', 'button'],\n    timeout: 2000,\n  })\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}